
./binaries/bin-out-obf.bin:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 3ff0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <printf@plt-0x10>:
    1020:	ff 35 e2 2f 00 00    	push   0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	ff 25 92 2f 00 00    	jmp    *0x2f92(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1046:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001050 <_start>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	31 ed                	xor    %ebp,%ebp
    1056:	49 89 d1             	mov    %rdx,%r9
    1059:	5e                   	pop    %rsi
    105a:	48 89 e2             	mov    %rsp,%rdx
    105d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1061:	50                   	push   %rax
    1062:	54                   	push   %rsp
    1063:	45 31 c0             	xor    %r8d,%r8d
    1066:	31 c9                	xor    %ecx,%ecx
    1068:	48 8d 3d c1 01 00 00 	lea    0x1c1(%rip),%rdi        # 1230 <main>
    106f:	ff 15 6b 2f 00 00    	call   *0x2f6b(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.34>
    1075:	f4                   	hlt    
    1076:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    107d:	00 00 00 

0000000000001080 <deregister_tm_clones>:
    1080:	48 8d 3d a9 2f 00 00 	lea    0x2fa9(%rip),%rdi        # 4030 <__TMC_END__>
    1087:	48 8d 05 a2 2f 00 00 	lea    0x2fa2(%rip),%rax        # 4030 <__TMC_END__>
    108e:	48 39 f8             	cmp    %rdi,%rax
    1091:	74 15                	je     10a8 <deregister_tm_clones+0x28>
    1093:	48 8b 05 4e 2f 00 00 	mov    0x2f4e(%rip),%rax        # 3fe8 <_ITM_deregisterTMCloneTable@Base>
    109a:	48 85 c0             	test   %rax,%rax
    109d:	74 09                	je     10a8 <deregister_tm_clones+0x28>
    109f:	ff e0                	jmp    *%rax
    10a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10a8:	c3                   	ret    
    10a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010b0 <register_tm_clones>:
    10b0:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4030 <__TMC_END__>
    10b7:	48 8d 35 72 2f 00 00 	lea    0x2f72(%rip),%rsi        # 4030 <__TMC_END__>
    10be:	48 29 fe             	sub    %rdi,%rsi
    10c1:	48 89 f0             	mov    %rsi,%rax
    10c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10c8:	48 c1 f8 03          	sar    $0x3,%rax
    10cc:	48 01 c6             	add    %rax,%rsi
    10cf:	48 d1 fe             	sar    %rsi
    10d2:	74 14                	je     10e8 <register_tm_clones+0x38>
    10d4:	48 8b 05 1d 2f 00 00 	mov    0x2f1d(%rip),%rax        # 3ff8 <_ITM_registerTMCloneTable@Base>
    10db:	48 85 c0             	test   %rax,%rax
    10de:	74 08                	je     10e8 <register_tm_clones+0x38>
    10e0:	ff e0                	jmp    *%rax
    10e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10e8:	c3                   	ret    
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <__do_global_dtors_aux>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	80 3d 35 2f 00 00 00 	cmpb   $0x0,0x2f35(%rip)        # 4030 <__TMC_END__>
    10fb:	75 2b                	jne    1128 <__do_global_dtors_aux+0x38>
    10fd:	55                   	push   %rbp
    10fe:	48 83 3d d2 2e 00 00 	cmpq   $0x0,0x2ed2(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1105:	00 
    1106:	48 89 e5             	mov    %rsp,%rbp
    1109:	74 0c                	je     1117 <__do_global_dtors_aux+0x27>
    110b:	48 8b 3d 16 2f 00 00 	mov    0x2f16(%rip),%rdi        # 4028 <__dso_handle>
    1112:	e8 29 ff ff ff       	call   1040 <__cxa_finalize@plt>
    1117:	e8 64 ff ff ff       	call   1080 <deregister_tm_clones>
    111c:	c6 05 0d 2f 00 00 01 	movb   $0x1,0x2f0d(%rip)        # 4030 <__TMC_END__>
    1123:	5d                   	pop    %rbp
    1124:	c3                   	ret    
    1125:	0f 1f 00             	nopl   (%rax)
    1128:	c3                   	ret    
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <frame_dummy>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	e9 77 ff ff ff       	jmp    10b0 <register_tm_clones>
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <_Z11str_printerv>:
    1140:	55                   	push   %rbp
    1141:	48 89 e5             	mov    %rsp,%rbp
    1144:	b8 00 00 fe 7f       	mov    $0x7ffe0000,%eax
    1149:	8b 08                	mov    (%rax),%ecx
    114b:	c1 e9 08             	shr    $0x8,%ecx
    114e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    1154:	81 c1 00 00 10 00    	add    $0x100000,%ecx
    115a:	be 4e dc d9 c3       	mov    $0xc3d9dc4e,%esi
    115f:	d3 e6                	shl    %cl,%esi
    1161:	b8 00 00 fe 7f       	mov    $0x7ffe0000,%eax
    1166:	8b 00                	mov    (%rax),%eax
    1168:	c1 e8 08             	shr    $0x8,%eax
    116b:	25 ff 00 00 00       	and    $0xff,%eax
    1170:	05 ff ff ff 00       	add    $0xffffff,%eax
    1175:	0d f3 f2 65 a3       	or     $0xa365f2f3,%eax
    117a:	89 c1                	mov    %eax,%ecx
    117c:	89 f2                	mov    %esi,%edx
    117e:	d3 e2                	shl    %cl,%edx
    1180:	29 f0                	sub    %esi,%eax
    1182:	89 d1                	mov    %edx,%ecx
    1184:	89 c6                	mov    %eax,%esi
    1186:	d3 ee                	shr    %cl,%esi
    1188:	89 d1                	mov    %edx,%ecx
    118a:	d3 e8                	shr    %cl,%eax
    118c:	89 c1                	mov    %eax,%ecx
    118e:	0f af ce             	imul   %esi,%ecx
    1191:	01 c6                	add    %eax,%esi
    1193:	31 f1                	xor    %esi,%ecx
    1195:	81 c1 53 8d 48 62    	add    $0x62488d53,%ecx
    119b:	89 c8                	mov    %ecx,%eax
    119d:	48 8d 3d 60 0e 00 00 	lea    0xe60(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    11a4:	48 81 c7 56 34 12 00 	add    $0x123456,%rdi
    11ab:	48 29 c7             	sub    %rax,%rdi
    11ae:	b0 00                	mov    $0x0,%al
    11b0:	e8 7b fe ff ff       	call   1030 <printf@plt>
    11b5:	b8 00 00 fe 7f       	mov    $0x7ffe0000,%eax
    11ba:	8b 00                	mov    (%rax),%eax
    11bc:	c1 e8 08             	shr    $0x8,%eax
    11bf:	25 ff 00 00 00       	and    $0xff,%eax
    11c4:	05 00 00 10 00       	add    $0x100000,%eax
    11c9:	ba db b6 a5 10       	mov    $0x10a5b6db,%edx
    11ce:	29 c2                	sub    %eax,%edx
    11d0:	b8 00 00 fe 7f       	mov    $0x7ffe0000,%eax
    11d5:	8b 00                	mov    (%rax),%eax
    11d7:	c1 e8 08             	shr    $0x8,%eax
    11da:	25 ff 00 00 00       	and    $0xff,%eax
    11df:	05 ff ff ff 00       	add    $0xffffff,%eax
    11e4:	69 c0 bd d0 09 d7    	imul   $0xd709d0bd,%eax,%eax
    11ea:	89 c1                	mov    %eax,%ecx
    11ec:	89 d6                	mov    %edx,%esi
    11ee:	d3 ee                	shr    %cl,%esi
    11f0:	31 c2                	xor    %eax,%edx
    11f2:	89 f1                	mov    %esi,%ecx
    11f4:	0f af ca             	imul   %edx,%ecx
    11f7:	0f af d6             	imul   %esi,%edx
    11fa:	89 c8                	mov    %ecx,%eax
    11fc:	09 d0                	or     %edx,%eax
    11fe:	29 d1                	sub    %edx,%ecx
    1200:	d3 e8                	shr    %cl,%eax
    1202:	05 4e bf fb 47       	add    $0x47fbbf4e,%eax
    1207:	89 c0                	mov    %eax,%eax
    1209:	48 8d 3d 11 0e 00 00 	lea    0xe11(%rip),%rdi        # 2021 <_IO_stdin_used+0x21>
    1210:	48 81 c7 56 34 12 00 	add    $0x123456,%rdi
    1217:	48 29 c7             	sub    %rax,%rdi
    121a:	e8 a1 01 00 00       	call   13c0 <_ZL8_obf_strPKc>
    121f:	5d                   	pop    %rbp
    1220:	c3                   	ret    
    1221:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1228:	0f 1f 84 00 00 00 00 
    122f:	00 

0000000000001230 <main>:
    1230:	55                   	push   %rbp
    1231:	48 89 e5             	mov    %rsp,%rbp
    1234:	48 83 ec 30          	sub    $0x30,%rsp
    1238:	c7 45 d0 2c 01 00 00 	movl   $0x12c,-0x30(%rbp)
    123f:	b8 00 00 fe 7f       	mov    $0x7ffe0000,%eax
    1244:	8b 00                	mov    (%rax),%eax
    1246:	c1 e8 08             	shr    $0x8,%eax
    1249:	25 ff 00 00 00       	and    $0xff,%eax
    124e:	05 00 00 10 00       	add    $0x100000,%eax
    1253:	35 b7 37 2b 75       	xor    $0x752b37b7,%eax
    1258:	b9 00 00 fe 7f       	mov    $0x7ffe0000,%ecx
    125d:	8b 09                	mov    (%rcx),%ecx
    125f:	c1 e9 08             	shr    $0x8,%ecx
    1262:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    1268:	81 c1 ff ff ff 00    	add    $0xffffff,%ecx
    126e:	81 c9 9e 03 14 1b    	or     $0x1b14039e,%ecx
    1274:	09 c1                	or     %eax,%ecx
    1276:	83 c1 00             	add    $0x0,%ecx
    1279:	c1 e1 00             	shl    $0x0,%ecx
    127c:	83 c1 00             	add    $0x0,%ecx
    127f:	81 c1 57 34 12 80    	add    $0x80123457,%ecx
    1285:	89 c8                	mov    %ecx,%eax
    1287:	48 8d 3d ad 0d 00 00 	lea    0xdad(%rip),%rdi        # 203b <_IO_stdin_used+0x3b>
    128e:	48 81 c7 56 34 12 00 	add    $0x123456,%rdi
    1295:	48 29 c7             	sub    %rax,%rdi
    1298:	e8 23 01 00 00       	call   13c0 <_ZL8_obf_strPKc>
    129d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    12a1:	c7 45 e0 90 5f 01 00 	movl   $0x15f90,-0x20(%rbp)
    12a8:	b8 00 00 fe 7f       	mov    $0x7ffe0000,%eax
    12ad:	8b 00                	mov    (%rax),%eax
    12af:	c1 e8 08             	shr    $0x8,%eax
    12b2:	25 ff 00 00 00       	and    $0xff,%eax
    12b7:	05 00 00 10 00       	add    $0x100000,%eax
    12bc:	0d d7 99 d1 45       	or     $0x45d199d7,%eax
    12c1:	b9 00 00 fe 7f       	mov    $0x7ffe0000,%ecx
    12c6:	8b 09                	mov    (%rcx),%ecx
    12c8:	c1 e9 08             	shr    $0x8,%ecx
    12cb:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    12d1:	81 c1 ff ff ff 00    	add    $0xffffff,%ecx
    12d7:	ba b2 c4 7a 8f       	mov    $0x8f7ac4b2,%edx
    12dc:	29 ca                	sub    %ecx,%edx
    12de:	29 d0                	sub    %edx,%eax
    12e0:	89 c1                	mov    %eax,%ecx
    12e2:	c1 e1 00             	shl    $0x0,%ecx
    12e5:	83 f0 00             	xor    $0x0,%eax
    12e8:	89 c2                	mov    %eax,%edx
    12ea:	0f af d1             	imul   %ecx,%edx
    12ed:	09 c1                	or     %eax,%ecx
    12ef:	01 ca                	add    %ecx,%edx
    12f1:	81 c2 1e 60 bb 08    	add    $0x8bb601e,%edx
    12f7:	89 d0                	mov    %edx,%eax
    12f9:	48 8d 3d 45 0d 00 00 	lea    0xd45(%rip),%rdi        # 2045 <_IO_stdin_used+0x45>
    1300:	48 81 c7 56 34 12 00 	add    $0x123456,%rdi
    1307:	48 29 c7             	sub    %rax,%rdi
    130a:	e8 b1 00 00 00       	call   13c0 <_ZL8_obf_strPKc>
    130f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1313:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1317:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    131b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1323:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1327:	48 8d 3d 22 0d 00 00 	lea    0xd22(%rip),%rdi        # 2050 <_IO_stdin_used+0x50>
    132e:	b0 00                	mov    $0x0,%al
    1330:	e8 fb fc ff ff       	call   1030 <printf@plt>
    1335:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    1339:	48 8d 3d 10 0d 00 00 	lea    0xd10(%rip),%rdi        # 2050 <_IO_stdin_used+0x50>
    1340:	b0 00                	mov    $0x0,%al
    1342:	e8 e9 fc ff ff       	call   1030 <printf@plt>
    1347:	e8 f4 fd ff ff       	call   1140 <_Z11str_printerv>
    134c:	b9 00 00 fe 7f       	mov    $0x7ffe0000,%ecx
    1351:	8b 09                	mov    (%rcx),%ecx
    1353:	c1 e9 08             	shr    $0x8,%ecx
    1356:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    135c:	81 c1 00 00 10 00    	add    $0x100000,%ecx
    1362:	ba 1a 31 9b 4f       	mov    $0x4f9b311a,%edx
    1367:	29 ca                	sub    %ecx,%edx
    1369:	b9 00 00 fe 7f       	mov    $0x7ffe0000,%ecx
    136e:	8b 09                	mov    (%rcx),%ecx
    1370:	c1 e9 08             	shr    $0x8,%ecx
    1373:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    1379:	81 c1 ff ff ff 00    	add    $0xffffff,%ecx
    137f:	81 c1 c2 9f 0a 46    	add    $0x460a9fc2,%ecx
    1385:	31 ca                	xor    %ecx,%edx
    1387:	89 d1                	mov    %edx,%ecx
    1389:	83 f1 ff             	xor    $0xffffffff,%ecx
    138c:	83 f2 ff             	xor    $0xffffffff,%edx
    138f:	29 ca                	sub    %ecx,%edx
    1391:	83 f2 ff             	xor    $0xffffffff,%edx
    1394:	81 c2 57 34 12 00    	add    $0x123457,%edx
    139a:	89 d1                	mov    %edx,%ecx
    139c:	48 8d 3d ad 0c 00 00 	lea    0xcad(%rip),%rdi        # 2050 <_IO_stdin_used+0x50>
    13a3:	48 81 c7 56 34 12 00 	add    $0x123456,%rdi
    13aa:	48 29 cf             	sub    %rcx,%rdi
    13ad:	48 89 c6             	mov    %rax,%rsi
    13b0:	b0 00                	mov    $0x0,%al
    13b2:	e8 79 fc ff ff       	call   1030 <printf@plt>
    13b7:	31 c0                	xor    %eax,%eax
    13b9:	48 83 c4 30          	add    $0x30,%rsp
    13bd:	5d                   	pop    %rbp
    13be:	c3                   	ret    

Disassembly of section ._obf_str:

00000000000013c0 <_ZL8_obf_strPKc>:
    13c0:	55                   	push   %rbp
    13c1:	48 89 e5             	mov    %rsp,%rbp
    13c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    13c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13cc:	5d                   	pop    %rbp
    13cd:	c3                   	ret    

Disassembly of section .fini:

00000000000013d0 <_fini>:
    13d0:	f3 0f 1e fa          	endbr64 
    13d4:	48 83 ec 08          	sub    $0x8,%rsp
    13d8:	48 83 c4 08          	add    $0x8,%rsp
    13dc:	c3                   	ret    
